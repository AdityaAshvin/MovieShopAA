# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - main

pool:
  name: 'Default'

variables:
  buildConfiguration: 'Release'
  solution: 'MovieShop.sln' 
  publishProject: 'MovieShopMVC/MovieShopMVC.csproj'

steps:
# 1. Install .NET SDK
- task: UseDotNet@2
  displayName: 'Use .NET 8 SDK'
  inputs:
    packageType: 'sdk'
    version: '8.0.x'

# 2. Restore
- script: dotnet restore $(solution)
  displayName: 'Restore NuGet packages'

# 3. Build
- script: dotnet build $(solution) -c $(buildConfiguration) --no-restore
  displayName: 'Build solution'

# 4. Test (skip if no test projects)
- script: dotnet test $(solution) -c $(buildConfiguration) --no-build --logger trx
  displayName: 'Run tests'

# 5. Publish Web App to staging directory
- script: dotnet publish $(publishProject) -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/publish_output
  displayName: 'Publish web project'

# 6. Zip the published files
- task: ArchiveFiles@2
  displayName: 'Archive published files'
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/publish_output'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/webapp.zip'
    replaceExistingArchive: true

# 7. Publish artifacts (optional if you want to keep a copy in DevOps)
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/webapp.zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'

# 8. Deploy to Azure App Service
- task: AzureWebApp@1
  displayName: 'Deploy to Azure App Service'
  inputs:
    azureSubscription: 'AzureForStudents-Conn'
    appType: 'webApp'
    appName: 'movieshopAA'
    package: '$(Build.ArtifactStagingDirectory)/webapp.zip'